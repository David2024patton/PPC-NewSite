export { createPageContextClientSide };
declare function createPageContextClientSide(): Promise<{
    _isOriginalObject: true;
    isPageContext: true;
} & {
    isClientSide: true;
    isPrerendering: false;
    isHydration: true;
    _globalContext: {
        _globalConfigPublic: {
            pages: {
                [k: string]: {
                    config: import("../../types/index.js").ConfigResolved;
                    _source: import("../../shared/page-configs/resolveVikeConfigPublic.js").Source;
                    _sources: import("../../shared/page-configs/resolveVikeConfigPublic.js").Sources;
                    _from: import("../../shared/page-configs/resolveVikeConfigPublic.js").From;
                } & ({
                    route: import("../../types/Config.js").Route;
                    isErrorPage?: undefined;
                } | {
                    route?: undefined;
                    isErrorPage: true;
                });
            };
            config: import("../../types/index.js").ConfigResolved;
            _source: import("../../shared/page-configs/resolveVikeConfigPublic.js").Source;
            _sources: import("../../shared/page-configs/resolveVikeConfigPublic.js").Sources;
            _from: import("../../shared/page-configs/resolveVikeConfigPublic.js").From;
        };
        pages: {
            [k: string]: {
                config: import("../../types/index.js").ConfigResolved;
                _source: import("../../shared/page-configs/resolveVikeConfigPublic.js").Source;
                _sources: import("../../shared/page-configs/resolveVikeConfigPublic.js").Sources;
                _from: import("../../shared/page-configs/resolveVikeConfigPublic.js").From;
            } & ({
                route: import("../../types/Config.js").Route;
                isErrorPage?: undefined;
            } | {
                route?: undefined;
                isErrorPage: true;
            });
        };
        config: import("../../types/index.js").ConfigResolved;
        _source: import("../../shared/page-configs/resolveVikeConfigPublic.js").Source;
        _sources: import("../../shared/page-configs/resolveVikeConfigPublic.js").Sources;
        _from: import("../../shared/page-configs/resolveVikeConfigPublic.js").From;
        isGlobalContext: true;
        _isOriginalObject: true;
        _virtualFileExportsGlobalEntry: unknown;
        _pageFilesAll: import("../../shared/getPageFiles.js").PageFile[];
        _pageConfigs: import("../../types/PageConfig.js").PageConfigRuntime[];
        _pageConfigGlobal: import("../../types/PageConfig.js").PageConfigGlobalRuntime;
        _allPageIds: string[];
    } & {
        isClientSide: true;
    };
    _pageFilesAll: import("../../shared/getPageFiles.js").PageFile[];
    isBackwardNavigation: null;
    _hasPageContextFromServer: true;
} & {
    pageId: string;
    routeParams: Record<string, string>;
} & import("../../shared/page-configs/resolveVikeConfigPublic.js").GlobalConfigPublic & import("../../shared/getPageFiles.js").PageContextConfig & {
    _pageFilesLoaded: import("../../shared/getPageFiles.js").PageFile[];
}>;
